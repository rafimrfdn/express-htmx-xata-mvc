import { Schemas } from '@xata.io/client';
import { MigrationFilePgroll } from './schema.js';
export declare const migrationsDir: string;
export declare function readMigrationsDir(): Promise<string[]>;
export type LocalMigrationFile = Schemas.MigrationObject | (MigrationFilePgroll & {
    id?: never;
    checksum?: never;
    operations?: never[];
});
export declare function getLocalMigrationFiles(pgRollEnabled?: boolean): Promise<LocalMigrationFile[]>;
export declare function writeLocalMigrationFiles(files: LocalMigrationFile[]): Promise<void>;
export declare function removeLocalMigrations(): Promise<void>;
export declare function commitToMigrationFile(logs: Schemas.Commit[] | Schemas.MigrationHistoryItem[]): LocalMigrationFile[];
export declare function getMigrationId(file?: LocalMigrationFile): string | undefined;
export declare const getLastCommonIndex: (localMigrationFiles: LocalMigrationFile[], remoteMigrationFiles: LocalMigrationFile[]) => number;
