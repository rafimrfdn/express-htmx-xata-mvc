import z from 'zod';
export declare const migrationFile: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
    message: z.ZodOptional<z.ZodString>;
    parentID: z.ZodOptional<z.ZodString>;
    checksum: z.ZodString;
    operations: z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        addTable: z.ZodObject<{
            table: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            table: string;
        }, {
            table: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        addTable: {
            table: string;
        };
    }, {
        addTable: {
            table: string;
        };
    }>, z.ZodObject<{
        removeTable: z.ZodObject<{
            table: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            table: string;
        }, {
            table: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        removeTable: {
            table: string;
        };
    }, {
        removeTable: {
            table: string;
        };
    }>, z.ZodObject<{
        renameTable: z.ZodObject<{
            oldName: z.ZodString;
            newName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            oldName: string;
            newName: string;
        }, {
            oldName: string;
            newName: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        renameTable: {
            oldName: string;
            newName: string;
        };
    }, {
        renameTable: {
            oldName: string;
            newName: string;
        };
    }>]>, z.ZodUnion<[z.ZodObject<{
        addColumn: z.ZodObject<{
            table: z.ZodString;
            column: z.ZodType<import("@xata.io/codegen").Column, z.ZodTypeDef, import("@xata.io/codegen").Column>;
        }, "strip", z.ZodTypeAny, {
            table: string;
            column: import("@xata.io/codegen").Column;
        }, {
            table: string;
            column: import("@xata.io/codegen").Column;
        }>;
    }, "strip", z.ZodTypeAny, {
        addColumn: {
            table: string;
            column: import("@xata.io/codegen").Column;
        };
    }, {
        addColumn: {
            table: string;
            column: import("@xata.io/codegen").Column;
        };
    }>, z.ZodObject<{
        removeColumn: z.ZodObject<{
            table: z.ZodString;
            column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            table: string;
            column: string;
        }, {
            table: string;
            column: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        removeColumn: {
            table: string;
            column: string;
        };
    }, {
        removeColumn: {
            table: string;
            column: string;
        };
    }>, z.ZodObject<{
        renameColumn: z.ZodObject<{
            table: z.ZodString;
            oldName: z.ZodString;
            newName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            table: string;
            oldName: string;
            newName: string;
        }, {
            table: string;
            oldName: string;
            newName: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        renameColumn: {
            table: string;
            oldName: string;
            newName: string;
        };
    }, {
        renameColumn: {
            table: string;
            oldName: string;
            newName: string;
        };
    }>]>]>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    checksum: string;
    operations: ({
        addTable: {
            table: string;
        };
    } | {
        removeTable: {
            table: string;
        };
    } | {
        renameTable: {
            oldName: string;
            newName: string;
        };
    } | {
        addColumn: {
            table: string;
            column: import("@xata.io/codegen").Column;
        };
    } | {
        removeColumn: {
            table: string;
            column: string;
        };
    } | {
        renameColumn: {
            table: string;
            oldName: string;
            newName: string;
        };
    })[];
    title?: string | undefined;
    message?: string | undefined;
    parentID?: string | undefined;
}, {
    id: string;
    checksum: string;
    operations: ({
        addTable: {
            table: string;
        };
    } | {
        removeTable: {
            table: string;
        };
    } | {
        renameTable: {
            oldName: string;
            newName: string;
        };
    } | {
        addColumn: {
            table: string;
            column: import("@xata.io/codegen").Column;
        };
    } | {
        removeColumn: {
            table: string;
            column: string;
        };
    } | {
        renameColumn: {
            table: string;
            oldName: string;
            newName: string;
        };
    })[];
    title?: string | undefined;
    message?: string | undefined;
    parentID?: string | undefined;
}>;
export declare const migrationFilePgroll: z.ZodObject<{
    name: z.ZodString;
    startedAt: z.ZodString;
    parent: z.ZodOptional<z.ZodString>;
    migration: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        operations: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            add_column: z.ZodObject<{
                column: z.ZodObject<{
                    check: z.ZodOptional<z.ZodObject<{
                        constraint: z.ZodString;
                        name: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        constraint: string;
                        name: string;
                    }, {
                        constraint: string;
                        name: string;
                    }>>;
                    default: z.ZodOptional<z.ZodString>;
                    name: z.ZodString;
                    nullable: z.ZodOptional<z.ZodBoolean>;
                    pk: z.ZodOptional<z.ZodBoolean>;
                    references: z.ZodOptional<z.ZodObject<{
                        column: z.ZodString;
                        name: z.ZodString;
                        table: z.ZodString;
                        on_delete: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    }, {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    }>>;
                    type: z.ZodString;
                    unique: z.ZodOptional<z.ZodBoolean>;
                    comment: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }, {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }>;
                table: z.ZodString;
                up: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            }, {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        }, {
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        }>, z.ZodObject<{
            alter_column: z.ZodObject<{
                check: z.ZodOptional<z.ZodObject<{
                    constraint: z.ZodString;
                    name: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    constraint: string;
                    name: string;
                }, {
                    constraint: string;
                    name: string;
                }>>;
                column: z.ZodString;
                down: z.ZodOptional<z.ZodString>;
                name: z.ZodOptional<z.ZodString>;
                nullable: z.ZodOptional<z.ZodBoolean>;
                references: z.ZodOptional<z.ZodObject<{
                    column: z.ZodString;
                    name: z.ZodString;
                    table: z.ZodString;
                    on_delete: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                }, {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                }>>;
                table: z.ZodString;
                type: z.ZodOptional<z.ZodString>;
                unique: z.ZodOptional<z.ZodObject<{
                    name: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                }, {
                    name: string;
                }>>;
                up: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            }, {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        }, {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        }>, z.ZodObject<{
            create_index: z.ZodObject<{
                columns: z.ZodArray<z.ZodString, "many">;
                name: z.ZodString;
                table: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                table: string;
                columns: string[];
            }, {
                name: string;
                table: string;
                columns: string[];
            }>;
        }, "strip", z.ZodTypeAny, {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        }, {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        }>, z.ZodObject<{
            create_table: z.ZodObject<{
                columns: z.ZodArray<z.ZodObject<{
                    check: z.ZodOptional<z.ZodObject<{
                        constraint: z.ZodString;
                        name: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        constraint: string;
                        name: string;
                    }, {
                        constraint: string;
                        name: string;
                    }>>;
                    default: z.ZodOptional<z.ZodString>;
                    name: z.ZodString;
                    nullable: z.ZodOptional<z.ZodBoolean>;
                    pk: z.ZodOptional<z.ZodBoolean>;
                    references: z.ZodOptional<z.ZodObject<{
                        column: z.ZodString;
                        name: z.ZodString;
                        table: z.ZodString;
                        on_delete: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    }, {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    }>>;
                    type: z.ZodString;
                    unique: z.ZodOptional<z.ZodBoolean>;
                    comment: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }, {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }>, "many">;
                name: z.ZodString;
                comment: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            }, {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        }, {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        }>, z.ZodObject<{
            drop_column: z.ZodObject<{
                column: z.ZodString;
                down: z.ZodOptional<z.ZodString>;
                table: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                column: string;
                table: string;
                down?: string | undefined;
            }, {
                column: string;
                table: string;
                down?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        }, {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        }>, z.ZodObject<{
            drop_constraint: z.ZodObject<{
                column: z.ZodString;
                down: z.ZodString;
                name: z.ZodString;
                table: z.ZodString;
                up: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            }, {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        }, {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        }>, z.ZodObject<{
            rename_constraint: z.ZodObject<{
                from: z.ZodString;
                to: z.ZodString;
                table: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                table: string;
                from: string;
                to: string;
            }, {
                table: string;
                from: string;
                to: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        }, {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        }>, z.ZodObject<{
            drop_index: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            drop_index: {
                name: string;
            };
        }, {
            drop_index: {
                name: string;
            };
        }>, z.ZodObject<{
            drop_table: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            drop_table: {
                name: string;
            };
        }, {
            drop_table: {
                name: string;
            };
        }>, z.ZodObject<{
            sql: z.ZodObject<{
                down: z.ZodOptional<z.ZodString>;
                up: z.ZodString;
                onComplete: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            }, {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        }, {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        }>, z.ZodObject<{
            rename_table: z.ZodObject<{
                from: z.ZodString;
                to: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                from: string;
                to: string;
            }, {
                from: string;
                to: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            rename_table: {
                from: string;
                to: string;
            };
        }, {
            rename_table: {
                from: string;
                to: string;
            };
        }>, z.ZodObject<{
            set_replica_identity: z.ZodObject<{
                identity: z.ZodObject<{
                    index: z.ZodString;
                    type: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    type: string;
                    index: string;
                }, {
                    type: string;
                    index: string;
                }>;
                table: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            }, {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        }, {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        }>]>, "many">;
    }, "strip", z.ZodTypeAny, {
        operations: ({
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        } | {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        } | {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        } | {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        } | {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        } | {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        } | {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        } | {
            drop_index: {
                name: string;
            };
        } | {
            drop_table: {
                name: string;
            };
        } | {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        } | {
            rename_table: {
                from: string;
                to: string;
            };
        } | {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        })[];
        name?: string | undefined;
    }, {
        operations: ({
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        } | {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        } | {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        } | {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        } | {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        } | {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        } | {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        } | {
            drop_index: {
                name: string;
            };
        } | {
            drop_table: {
                name: string;
            };
        } | {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        } | {
            rename_table: {
                from: string;
                to: string;
            };
        } | {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        })[];
        name?: string | undefined;
    }>;
    done: z.ZodBoolean;
    migrationType: z.ZodEnum<["pgroll", "inferred"]>;
}, "strip", z.ZodTypeAny, {
    name: string;
    done: boolean;
    startedAt: string;
    migration: {
        operations: ({
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        } | {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        } | {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        } | {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        } | {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        } | {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        } | {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        } | {
            drop_index: {
                name: string;
            };
        } | {
            drop_table: {
                name: string;
            };
        } | {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        } | {
            rename_table: {
                from: string;
                to: string;
            };
        } | {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        })[];
        name?: string | undefined;
    };
    migrationType: "pgroll" | "inferred";
    parent?: string | undefined;
}, {
    name: string;
    done: boolean;
    startedAt: string;
    migration: {
        operations: ({
            add_column: {
                column: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                };
                table: string;
                up?: string | undefined;
            };
        } | {
            alter_column: {
                column: string;
                table: string;
                check?: {
                    constraint: string;
                    name: string;
                } | undefined;
                down?: string | undefined;
                name?: string | undefined;
                nullable?: boolean | undefined;
                references?: {
                    name: string;
                    column: string;
                    table: string;
                    on_delete?: string | undefined;
                } | undefined;
                type?: string | undefined;
                unique?: {
                    name: string;
                } | undefined;
                up?: string | undefined;
            };
        } | {
            create_index: {
                name: string;
                table: string;
                columns: string[];
            };
        } | {
            create_table: {
                name: string;
                columns: {
                    name: string;
                    type: string;
                    check?: {
                        constraint: string;
                        name: string;
                    } | undefined;
                    default?: string | undefined;
                    nullable?: boolean | undefined;
                    pk?: boolean | undefined;
                    references?: {
                        name: string;
                        column: string;
                        table: string;
                        on_delete?: string | undefined;
                    } | undefined;
                    unique?: boolean | undefined;
                    comment?: string | undefined;
                }[];
                comment?: string | undefined;
            };
        } | {
            drop_column: {
                column: string;
                table: string;
                down?: string | undefined;
            };
        } | {
            drop_constraint: {
                name: string;
                column: string;
                table: string;
                up: string;
                down: string;
            };
        } | {
            rename_constraint: {
                table: string;
                from: string;
                to: string;
            };
        } | {
            drop_index: {
                name: string;
            };
        } | {
            drop_table: {
                name: string;
            };
        } | {
            sql: {
                up: string;
                down?: string | undefined;
                onComplete?: boolean | undefined;
            };
        } | {
            rename_table: {
                from: string;
                to: string;
            };
        } | {
            set_replica_identity: {
                table: string;
                identity: {
                    type: string;
                    index: string;
                };
            };
        })[];
        name?: string | undefined;
    };
    migrationType: "pgroll" | "inferred";
    parent?: string | undefined;
}>;
export type MigrationFilePgroll = z.infer<typeof migrationFilePgroll>;
