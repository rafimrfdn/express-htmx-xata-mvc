var _a;
import { Args } from '@oclif/core';
import { BaseCommand } from '../../base.js';
class BranchDelete extends BaseCommand {
    async run() {
        const { args, flags } = await this.parseCommand();
        const { workspace, region, database } = await this.getParsedDatabaseURL(flags.db);
        const branch = args.branch;
        const xata = await this.getXataClient();
        const { confirm } = await this.prompt({
            type: 'text',
            name: 'confirm',
            message: `Are you sure you want to delete the branch ${database}:${branch} in the ${workspace} workspace? Please type ${branch} to confirm`,
            initial: false
        }, flags.force ? branch : undefined);
        if (!confirm)
            return this.exit(1);
        if (confirm !== branch)
            return this.error('The branch name did not match');
        await xata.api.branches.deleteBranch({ workspace, region, database, branch });
        if (this.jsonEnabled())
            return {};
        this.success(`Branch ${database}:${branch} in the ${workspace} workspace successfully deleted`);
    }
}
_a = BranchDelete;
BranchDelete.description = 'Delete a branch';
BranchDelete.examples = [];
BranchDelete.flags = {
    ..._a.commonFlags,
    ..._a.databaseURLFlag,
    ...BaseCommand.forceFlag()
};
BranchDelete.args = {
    branch: Args.string({ description: 'Branch name to delete', required: true })
};
BranchDelete.enableJsonFlag = true;
export default BranchDelete;
